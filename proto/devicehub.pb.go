// Code generated by protoc-gen-go.
// source: devicehub.proto
// DO NOT EDIT!

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	devicehub.proto

It has these top-level messages:
	PipeListRequest
	PipeListReply
	Pipe
	Endpoint
	Profile
	Statistics
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

type PipeState int32

const (
	PipeState_UNKNOWN PipeState = 0
	PipeState_RUNNING PipeState = 1
	PipeState_STOPPED PipeState = 2
	PipeState_ERRORED PipeState = 3
)

var PipeState_name = map[int32]string{
	0: "UNKNOWN",
	1: "RUNNING",
	2: "STOPPED",
	3: "ERRORED",
}
var PipeState_value = map[string]int32{
	"UNKNOWN": 0,
	"RUNNING": 1,
	"STOPPED": 2,
	"ERRORED": 3,
}

func (x PipeState) String() string {
	return proto1.EnumName(PipeState_name, int32(x))
}
func (PipeState) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type PipeListRequest struct {
}

func (m *PipeListRequest) Reset()                    { *m = PipeListRequest{} }
func (m *PipeListRequest) String() string            { return proto1.CompactTextString(m) }
func (*PipeListRequest) ProtoMessage()               {}
func (*PipeListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type PipeListReply struct {
	Pipes []*Pipe `protobuf:"bytes,1,rep,name=pipes" json:"pipes,omitempty"`
}

func (m *PipeListReply) Reset()                    { *m = PipeListReply{} }
func (m *PipeListReply) String() string            { return proto1.CompactTextString(m) }
func (*PipeListReply) ProtoMessage()               {}
func (*PipeListReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *PipeListReply) GetPipes() []*Pipe {
	if m != nil {
		return m.Pipes
	}
	return nil
}

type Pipe struct {
	Uri string `protobuf:"bytes,1,opt,name=uri" json:"uri,omitempty"`
	// TODO : reinstate
	// google.protobuf.Timestamp started = 2;
	State        PipeState   `protobuf:"varint,2,opt,name=state,enum=proto.PipeState" json:"state,omitempty"`
	Profile      *Profile    `protobuf:"bytes,3,opt,name=profile" json:"profile,omitempty"`
	Listener     *Endpoint   `protobuf:"bytes,4,opt,name=listener" json:"listener,omitempty"`
	MessageStats *Statistics `protobuf:"bytes,5,opt,name=message_stats,json=messageStats" json:"message_stats,omitempty"`
	Endpoints    []*Endpoint `protobuf:"bytes,6,rep,name=endpoints" json:"endpoints,omitempty"`
}

func (m *Pipe) Reset()                    { *m = Pipe{} }
func (m *Pipe) String() string            { return proto1.CompactTextString(m) }
func (*Pipe) ProtoMessage()               {}
func (*Pipe) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Pipe) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *Pipe) GetState() PipeState {
	if m != nil {
		return m.State
	}
	return PipeState_UNKNOWN
}

func (m *Pipe) GetProfile() *Profile {
	if m != nil {
		return m.Profile
	}
	return nil
}

func (m *Pipe) GetListener() *Endpoint {
	if m != nil {
		return m.Listener
	}
	return nil
}

func (m *Pipe) GetMessageStats() *Statistics {
	if m != nil {
		return m.MessageStats
	}
	return nil
}

func (m *Pipe) GetEndpoints() []*Endpoint {
	if m != nil {
		return m.Endpoints
	}
	return nil
}

type Endpoint struct {
	Uid  string `protobuf:"bytes,1,opt,name=uid" json:"uid,omitempty"`
	Type string `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
}

func (m *Endpoint) Reset()                    { *m = Endpoint{} }
func (m *Endpoint) String() string            { return proto1.CompactTextString(m) }
func (*Endpoint) ProtoMessage()               {}
func (*Endpoint) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Endpoint) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *Endpoint) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type Profile struct {
	Name        string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	Version     string `protobuf:"bytes,3,opt,name=version" json:"version,omitempty"`
}

func (m *Profile) Reset()                    { *m = Profile{} }
func (m *Profile) String() string            { return proto1.CompactTextString(m) }
func (*Profile) ProtoMessage()               {}
func (*Profile) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Profile) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Profile) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Profile) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

type Statistics struct {
	Total  uint64 `protobuf:"varint,1,opt,name=total" json:"total,omitempty"`
	Errors uint64 `protobuf:"varint,2,opt,name=errors" json:"errors,omitempty"`
	Ok     uint64 `protobuf:"varint,3,opt,name=ok" json:"ok,omitempty"`
}

func (m *Statistics) Reset()                    { *m = Statistics{} }
func (m *Statistics) String() string            { return proto1.CompactTextString(m) }
func (*Statistics) ProtoMessage()               {}
func (*Statistics) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *Statistics) GetTotal() uint64 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *Statistics) GetErrors() uint64 {
	if m != nil {
		return m.Errors
	}
	return 0
}

func (m *Statistics) GetOk() uint64 {
	if m != nil {
		return m.Ok
	}
	return 0
}

func init() {
	proto1.RegisterType((*PipeListRequest)(nil), "proto.PipeListRequest")
	proto1.RegisterType((*PipeListReply)(nil), "proto.PipeListReply")
	proto1.RegisterType((*Pipe)(nil), "proto.Pipe")
	proto1.RegisterType((*Endpoint)(nil), "proto.Endpoint")
	proto1.RegisterType((*Profile)(nil), "proto.Profile")
	proto1.RegisterType((*Statistics)(nil), "proto.Statistics")
	proto1.RegisterEnum("proto.PipeState", PipeState_name, PipeState_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Hub service

type HubClient interface {
	// list all running pipes
	PipeList(ctx context.Context, in *PipeListRequest, opts ...grpc.CallOption) (*PipeListReply, error)
}

type hubClient struct {
	cc *grpc.ClientConn
}

func NewHubClient(cc *grpc.ClientConn) HubClient {
	return &hubClient{cc}
}

func (c *hubClient) PipeList(ctx context.Context, in *PipeListRequest, opts ...grpc.CallOption) (*PipeListReply, error) {
	out := new(PipeListReply)
	err := grpc.Invoke(ctx, "/proto.Hub/PipeList", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Hub service

type HubServer interface {
	// list all running pipes
	PipeList(context.Context, *PipeListRequest) (*PipeListReply, error)
}

func RegisterHubServer(s *grpc.Server, srv HubServer) {
	s.RegisterService(&_Hub_serviceDesc, srv)
}

func _Hub_PipeList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PipeListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HubServer).PipeList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Hub/PipeList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HubServer).PipeList(ctx, req.(*PipeListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Hub_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Hub",
	HandlerType: (*HubServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PipeList",
			Handler:    _Hub_PipeList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "devicehub.proto",
}

func init() { proto1.RegisterFile("devicehub.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 452 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x64, 0x52, 0xcd, 0x6b, 0xdb, 0x30,
	0x14, 0xaf, 0x63, 0xe7, 0xeb, 0x79, 0x4d, 0xdc, 0x47, 0x57, 0xcc, 0x4e, 0x9e, 0x0f, 0xc3, 0xdb,
	0x58, 0x18, 0x1e, 0xec, 0xb0, 0xcb, 0x58, 0x49, 0x58, 0xf7, 0x81, 0x63, 0xd4, 0x95, 0xb1, 0xd3,
	0x48, 0x62, 0xb5, 0x15, 0x75, 0x2d, 0x4d, 0x92, 0x0b, 0xf9, 0xe7, 0x47, 0x91, 0x6c, 0x27, 0x81,
	0x9e, 0xf2, 0x7e, 0x9f, 0x8a, 0xe4, 0x07, 0xd3, 0x82, 0x3e, 0xb0, 0x0d, 0xbd, 0xad, 0xd7, 0x33,
	0x21, 0xb9, 0xe6, 0xd8, 0xb7, 0x3f, 0xf1, 0x09, 0x4c, 0x73, 0x26, 0xe8, 0x4f, 0xa6, 0x34, 0xa1,
	0xff, 0x6a, 0xaa, 0x74, 0x9c, 0xc2, 0xf1, 0x9e, 0x12, 0xe5, 0x16, 0x5f, 0x42, 0x5f, 0x30, 0x41,
	0x55, 0xe8, 0x44, 0x6e, 0xe2, 0xa7, 0x7e, 0xd3, 0x30, 0x33, 0x26, 0xd2, 0x28, 0xf1, 0x7f, 0x07,
	0x3c, 0x83, 0x31, 0x00, 0xb7, 0x96, 0x2c, 0x74, 0x22, 0x27, 0x19, 0x13, 0x33, 0xe2, 0x2b, 0xe8,
	0x2b, 0xbd, 0xd2, 0x34, 0xec, 0x45, 0x4e, 0x32, 0x49, 0x83, 0x83, 0xf4, 0xa5, 0xe1, 0x49, 0x23,
	0x63, 0x02, 0x43, 0x21, 0xf9, 0x35, 0x2b, 0x69, 0xe8, 0x46, 0x4e, 0xe2, 0xa7, 0x93, 0xce, 0xd9,
	0xb0, 0xa4, 0x93, 0xf1, 0x2d, 0x8c, 0x4a, 0xa6, 0x34, 0xad, 0xa8, 0x0c, 0x3d, 0x6b, 0x9d, 0xb6,
	0xd6, 0x45, 0x55, 0x08, 0xce, 0x2a, 0x4d, 0x76, 0x06, 0xfc, 0x08, 0xc7, 0xf7, 0x54, 0xa9, 0xd5,
	0x0d, 0xfd, 0x6b, 0xce, 0x51, 0x61, 0xdf, 0x26, 0x4e, 0xda, 0x84, 0xf9, 0x0b, 0x4c, 0x69, 0xb6,
	0x51, 0xe4, 0x59, 0xeb, 0x33, 0x94, 0xc2, 0x77, 0x30, 0xa6, 0x6d, 0x9b, 0x0a, 0x07, 0xf6, 0xe2,
	0x4f, 0x4e, 0xd9, 0x3b, 0xe2, 0xf7, 0x30, 0xea, 0x68, 0xfb, 0x06, 0xac, 0xd8, 0xbd, 0x01, 0x2b,
	0x10, 0xc1, 0xd3, 0x5b, 0xd1, 0x3c, 0xc1, 0x98, 0xd8, 0x39, 0xfe, 0x03, 0xc3, 0xf6, 0x66, 0x46,
	0xae, 0x56, 0xf7, 0xb4, 0x4d, 0xd8, 0x19, 0x23, 0xf0, 0x0b, 0xaa, 0x36, 0x92, 0x09, 0xcd, 0x78,
	0xd5, 0x26, 0x0f, 0x29, 0x0c, 0x61, 0xf8, 0x40, 0xa5, 0x32, 0xaa, 0x6b, 0xd5, 0x0e, 0xc6, 0xdf,
	0x01, 0xf6, 0xf7, 0xc2, 0x53, 0xe8, 0x6b, 0xae, 0x57, 0xa5, 0xad, 0xf7, 0x48, 0x03, 0xf0, 0x0c,
	0x06, 0x54, 0x4a, 0x2e, 0x95, 0xad, 0xf6, 0x48, 0x8b, 0x70, 0x02, 0x3d, 0x7e, 0x67, 0x0b, 0x3d,
	0xd2, 0xe3, 0x77, 0x6f, 0x3e, 0xc3, 0x78, 0xf7, 0xa9, 0xd0, 0x87, 0xe1, 0x55, 0xf6, 0x23, 0x5b,
	0xfe, 0xce, 0x82, 0x23, 0x03, 0xc8, 0x55, 0x96, 0x7d, 0xcb, 0xbe, 0x06, 0x8e, 0x01, 0x97, 0xbf,
	0x96, 0x79, 0xbe, 0x98, 0x07, 0x3d, 0x03, 0x16, 0x84, 0x2c, 0xc9, 0x62, 0x1e, 0xb8, 0xe9, 0x17,
	0x70, 0x2f, 0xea, 0x35, 0x7e, 0x82, 0x51, 0xb7, 0x55, 0x78, 0x76, 0xb0, 0x03, 0x07, 0x9b, 0xf7,
	0xe2, 0xf4, 0x09, 0x2f, 0xca, 0x6d, 0x7c, 0x74, 0xfe, 0x1a, 0x9e, 0x33, 0x3e, 0xd3, 0xb7, 0xac,
	0xba, 0xb9, 0xae, 0xcb, 0xd9, 0x6e, 0x95, 0xcf, 0x27, 0x73, 0x3b, 0x5e, 0xd4, 0xeb, 0xdc, 0x04,
	0x73, 0x67, 0x3d, 0xb0, 0x0d, 0x1f, 0x1e, 0x03, 0x00, 0x00, 0xff, 0xff, 0x1d, 0x0c, 0x86, 0x4e,
	0xf0, 0x02, 0x00, 0x00,
}
