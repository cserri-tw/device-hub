// Copyright Â© 2017 thingful

syntax = "proto3";

option java_multiple_files = true;
option java_package = "io.thingful.devicehub";
option java_outer_classname = "DeviceHubProto";

package proto;

//import "github.com/gogo/protobuf/gogoproto/gogo.proto";
//import "google/protobuf/timestamp.proto";

service Hub {
    rpc Create (CreateRequest) returns (CreateReply) {}
    rpc Delete (DeleteRequest) returns (DeleteReply) {}
    rpc Get (GetRequest) returns (GetReply) {}
}

message CreateRequest {
/*
    enum Type {
        ENDPOINT = 0;
        LISTENER  = 1;
    }

    enum ListenerKind {
        MQTT = 0;
        HTTP = 1;
        STDIN = 2;
    }

    enum EndpointKind {
        STDOUT = 0;
    }
*/
    string type = 1;
    string kind = 2;

    map<string, string> configuration = 3;

}

message CreateReply {
    bool ok = 1;
    string error = 2;
    string uid = 3;
}

message DeleteRequest {
    string type = 1;
    string uid = 2;
}

message DeleteReply {
    bool ok = 1;
    string error = 2;
}

message GetRequest {
    string filter = 1;
}

message GetReply {
    bool ok = 1;
    string error = 2;
    repeated Endpoint endpoints = 3;
}

message Endpoint {
    string uid = 1;
    string type = 2;
    string kind = 3;
    map<string, string> configuration = 4;
}

/*
    // add a pipe to an existing listener and endpoint
    rpc PipeAdd (PipeAddRequest) returns (PipeAddReply) {}

    // delete pipe by URI
    rpc PipeDelete (PipeDeleteRequest) returns (PipeDeleteReply) {}

    // list all running pipes
    rpc PipeList (PipeListRequest) returns (PipeListReply) {}

    rpc Stats (StatsRequest) returns (StatsReply) {}
}

message EndpointAddRequest{
    Endpoint endpoint = 1;
}

message EndpointAddReply{
    bool ok = 1;
    string error = 2;
    string uid = 3;
}

message EndpointDeleteRequest{
    string uid = 1;
}

message EndpointDeleteReply{
    bool ok = 1;
    string error = 2;
}

message EndpointListRequest{}

message EndpointListReply{
    bool ok = 1;
    string error = 2;
    repeated Endpoint endpoints = 3;
}

message ListenerAddRequest{}
message ListenerAddReply{
    bool ok = 1;
    string error = 2;
}
message ListenerDeleteRequest{}
message ListenerDeleteReply{
    bool ok = 1;
    string error = 2;
}
message ListenerListRequest{}
message ListenerListReply{
    bool ok = 1;
    string error = 2;
}

message PipeAddRequest {
    string uri = 1;
    string profile_uid = 2;
    string listener_uid = 3;
    repeated string endpoint_uids = 4;
}

message PipeAddReply {
    bool ok = 1;
    string error = 2;
}

message PipeDeleteRequest {
    string uri = 1;
}

message PipeDeleteReply {
    bool ok = 1;
    string error = 2;
}

message PipeListRequest {
}

message PipeListReply {
    repeated Pipe pipes = 1;
}

message Pipe {
    string uri = 1;
    Profile profile = 3;
    Endpoint listener = 4;
    repeated Endpoint endpoints = 6;
}

message PipeStatus {

    enum State {
        UNKNOWN = 0;
        RUNNING = 1;
        STOPPED = 2;
        ERRORED = 3;
    }

    State state = 1;
    Statistics stats = 2;
    // TODO : reinstate
    //google.protobuf.Timestamp started = 2;

}

message Profile {
    string uid = 1;
    string name = 2;

    enum Type {
        Script = 0;
    }

    Type type = 3;
    string description = 4;
    string version = 5;

    Script script = 6;
}

message Script {

    string main = 1;

    enum Type {
        JAVASCRIPT = 0;
    }

    Type runtime = 2;

    enum Input{
        JSON = 0;
        CSV = 1;
        XML = 2;
    }

    Input input = 3;
    string contents = 4;
}

message StatsRequest{}
message StatsReply{
    bool ok = 1;
    string error = 2;
}
message Statistics {
    uint64 total = 1;
    uint64 errors = 2;
    uint64 ok = 3;
}
*/

